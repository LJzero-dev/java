JSON(JavaScript Object Notation)
 - 애플리케이션이 네트워크를 통해 통신할 수 있도록 자바스크립트의 객체 표기법을 제한하여 만든 텍스트 기반의 데이터 교환 표준
 - 프로그래밍 언어(Java, Javascript, C#, PHP, Python 등) 에서 JSON 데이터를 생성하고 받아들일 수 있음
 - 보통 JSON은 객체, 배열, 이름-값 쌍과 같은 구조로 이루어져 있음
 - JSON은 쉽고 간단하다는 점에서 XML을 대체해 인터넷 상에서 이용되는 정보교환을 위한 주류 포맷이 됨
 - JSON에서는 별도의 주석은 사용할 수 없음(다른 시스템 간의 연동과 호환성을 위한 조치)
 - JSON은 데이터만을 담으므로 프로퍼티만 담을 수 있으며, 메소드는 담을 수 없음

JSON 데이터 타입
 - 데이터 타입 : array, object, string, number, boolean, null

1. 이름-값 쌍 : key와 value로 구성된 pair
 - 각각의 이름은 콜론의 좌측에 위치함
 - 각각의 이름은 문자열이며 큰 따옴표를 사용
 - 값은 콜론의 우측에 위치하며 문자열 외에도 다른 데이터 타입을 사용할 수 있음
 - 문법
{
	"이름":"값1","값2",..."이름n":"값n"
}

2. 배열 : 순서가 정의된 값의 모임으로 데이터의 집합으로 생각하면 됨
 - 대괄호 안에 정의
 - 하나 이상의 값으로 구성되며, 순서가 정해져 있고 쉼표로 구분함
 - 배열 안에 요소가 하나도 없을 수도 있음 []
 - 인덱스 번호를 가짐
 - 서로 다른 타입의 데이터를 하나의 배열에 담을 수 있음
 - 문법
{
	배열명 : [값1, 값2, ... , 값n]
}

3. 객체 : 순서가 정의되지 않은 이름-값 쌍의 모임으로 프로퍼티의 집합으로 생각하면 됨
 - 하나 이상의 이름-값 쌍이나 배열, 다른 객체 등으로 구성
 - 안에 요소가 없을 수도 있음 {}
 - 문법1) 이름-값 쌍
{
	"addr : {
		"sido":"서울", "gugun":"강남구","dong":"삼성동","bunji":"123-45"
	}
}
 - 문법2) 배열 포함
{
	"hobby":{
		"music","발라드","sports",:["축구", "농구", "야구"]
	}
}
 - 문법3) 다른 객체 포함
{
	"person" : {
		"firstName" : "길동", "lastName" : "홍",
		"hobby":{"music","발라드","sports",:["축구", "농구", "야구"]},
		"addr : {"sido":"서울", "gugun":"강남구","dong":"삼성동","bunji":"123-45"}	
	}
}
4. string : 문자열
 - 문자열은 큰 따옴표로 감싼 빈 문자열 혹은 하나 이상의 유니코드 문자로 되어 있음 작은 따옴표로 감싼 문자열은 안됨
 - 그 외 이스케이프 문자(특정 기능을 가진 문자로 백 슬래시로 시작됨)도 포함됨

5. number : 숫자
 - 10진수를 사용하며 0이나 .으로 시작할 수 없음
 - 자바스크립트와 달리 NaN(Not a Number)을 가질 수 없음

6. boolean : 논리값
 - true와 false 만을 값으로 사용

7. null
 - 키 혹은 속성이 아무 값도 가지지 않는 것을 나타냄
 - 자리를 채우기 위한 목적으로도 사용됨

자바스크립트에서 JSON 사용
 - 타 프로그램을 위해 플랫폼에 종속적이지 않은 형태의 데이터를 생성하려면 직렬화(인코딩)
 - 프로그램이 외부로부터 받은 JSON 데이터를 내부 데이터 구조에서 사용하려면 비직렬화(디코딩)라는 과정이 필요함

1. JSON.stringify() : 직렬화 메소드
 - 인수로 전달받은 자바스크립트 객체를 JSON 형식의 문자열로 변환하여 리턴
 	변환하려는 객체내에 함수가 있을 경우 함수는 변환되지 않음
 - 일반적인 스칼라 값(문자열, 숫자, 불(bool, 부울) 값)에 대해서는 특별히 하는 동작은 없음
 - 주로 특정 API등으로 데이터를 보내기 위해 사용됨
 - 문법
var 변수 = JSON.stringify(변경할 자바스크립트 객체[, replacer]);
	replacer : 선택사항으로 배열이나 함수 형태로 값을 넣을 수 있음(오버로딩)
	 - 배열은 내부에 프로퍼티 이름만 넣으면 해당 프로퍼티만 보여줌(예:["프로퍼티명",...])
	 - 함수는 기본적으로 key와 value를 인수로 전달 받으며 value를 리턴하고, 간단한 작업도 가능함
2. JSON.parse() : 비직렬화 메소드
 - JSON.stringify() 메소드와 반대로 인수로 전달받은 JSON 형식의 문자열을 자바스크립트 객체로 변환하여 리턴
 - JSON 형식의 문자열만을 변환함