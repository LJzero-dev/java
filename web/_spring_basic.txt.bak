1. 의존
 - 의존이란 클래스(객체) 간의 의존을 의미하며, 한 클래스에서 다른 클래스의 메소드를 사용하는 것을 '의존' 한다라고 표현함
 - 의존은 변경에 의해 영향을 받는 관계를 의미하며, 변겨에 따ㅡㄹㄴ 영향이 전파되는 관계를 의미 
 - 작업시 클래스 내부에서 직접 의존 객체를 생성하는 것이 가장 쉬우나, 유지보수 관점에서는 문제가 발생할 수 있음

1.1. 의존주입(DI, Dependency Injection)
 - 의존하는 객체를 직접 생성하는 대신 의존 객체를 전달받는 방식을 사용

1-2. 의존 자동 주입 - @Autowired
 - 자동 주입이 필요한 필드나 메소드에 @Autowired 애노테이션을 사용함
 - @Autowired를 사용하면 필요한 빈을 자동으로 찾아 빈 객체를 주입해줌
 	설정 클래스 등에서 인위적으로 의존을 주입하지 않아도 됨
 - @Autowired 애노테이션을 필드나 setter 메소드에 붙이면 스프링은 타입이 일치하는 빈 객체를 찾아서 주입함

 - @Autowired를 사용해서 의존 주입 시 주입할 빈 객체가 없을 경우 처리법
 	@Autowired를 사용하면 무조건 빈 객체를 주입해야 하나, 해당 빈이 없으면 NoSuchBeanDefinitionException 예외가 발생함
	1) @Autowired(required = false)
	 - 해당 빈이 없을 경우 setter 메소드를 아예 호출하지 않음

	 2) 자동주입 대상의 타입을 Optional<>로 변경
	  - 해당 빈이 없으면 값이 없는 Optional을, 값이 있으면 해당 빈을 값으로 하는 Optional을 매개변수로 전달
	  - 예 : public void setter(Optional<해당빈객체> 매개변수명) {
		if (매개변수명.isPresent())			{ 해당 빈이 있을 경우; }
		else										{ 해당 빈이 없을 경우; }
	  }

	  3) @Nullable 애노테이션
	   - 의존주입 대상 매개변수에 @Nullable 애노테이션을 붙이면 스프링이 setter를 호출할 때 해당 빈이 있으면 빈을, 없으면 null을 각각 전달함